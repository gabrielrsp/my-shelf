{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/my-shelf/src/routes/Route.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport store from '../store';\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate = false,\n  ...rest\n}) {\n  const {\n    signed\n  } = store.getState().auth;\n\n  if (!signed && isPrivate) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  if (signed && !isPrivate) {\n    return React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n}\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};","map":{"version":3,"sources":["/home/gabriel/my-shelf/src/routes/Route.js"],"names":["React","PropTypes","Route","Redirect","store","RouteWrapper","component","Component","isPrivate","rest","signed","getState","auth","props","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAIA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,SAAS,EAAEC,SADwB;AAEnCC,EAAAA,SAAS,GAAG,KAFuB;AAGnC,KAAGC;AAHgC,CAAtB,EAIZ;AACD,QAAO;AAAEC,IAAAA;AAAF,MAAaN,KAAK,CAACO,QAAN,GAAiBC,IAArC;;AAEA,MAAI,CAACF,MAAD,IAAWF,SAAf,EAA0B;AACxB,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIE,MAAM,IAAI,CAACF,SAAf,EAA0B;AACxB,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACG,oBAAC,KAAD,oBAAWC,IAAX;AAAiB,IAAA,MAAM,EAAEI,KAAK,IAE3B,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH;AAQD;AAEDR,YAAY,CAACS,SAAb,GAAyB;AACvBN,EAAAA,SAAS,EAAEP,SAAS,CAACc,IADE;AAEvBT,EAAAA,SAAS,EAAEL,SAAS,CAACe,SAAV,CAAoB,CAACf,SAAS,CAACgB,OAAX,EAAoBhB,SAAS,CAACiB,IAA9B,CAApB,EAAyDC;AAF7C,CAAzB;AAKAd,YAAY,CAACe,YAAb,GAA4B;AAC1BZ,EAAAA,SAAS,EAAE;AADe,CAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\n\n\nimport store from '../store';\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate = false,\n  ...rest\n}) {\n  const  { signed } = store.getState().auth;\n\n  if (!signed && isPrivate) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (signed && !isPrivate) {\n    return <Redirect to=\"/main\" />;\n  }\n\n  return(\n     <Route {...rest} render={props => (\n\n        <Component {...props} />\n\n    )}\n   />\n  );\n}\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: false,\n}\n"]},"metadata":{},"sourceType":"module"}