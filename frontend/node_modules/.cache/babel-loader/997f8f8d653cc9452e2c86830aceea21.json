{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport history from '../../../services/history';\nimport { signInSuccess, signFailure } from './actions';\nimport api from '../../../services/api';\nexport function* signIn({\n  payload\n}) {\n  try {\n    const {\n      email,\n      password\n    } = payload;\n    const response = yield call(api.post, 'sessions', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n    yield put(signInSuccess(token, user));\n    history.push('/main');\n  } catch (err) {\n    toast.error('Failed to Authenticate');\n    yield put(signFailure());\n  }\n}\nexport function* signUp({\n  payload\n}) {\n  try {\n    const {\n      name,\n      email,\n      password\n    } = payload;\n    yield call(api.post, 'users', {\n      name,\n      email,\n      password\n    });\n    history.push('/');\n  } catch (err) {\n    toast.error('Failed to sign up, please check your data');\n    yield put(signFailure());\n  }\n}\nexport function setToken({\n  payload\n}) {\n  if (!payload) return;\n  const {\n    token\n  } = payload.auth;\n\n  if (token) {\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n  }\n}\nexport default all([takeLatest('persist/REHYDRATE', setToken), takeLatest('@auth/SIGN_IN_REQUEST', signIn), takeLatest('@auth/SIGN_UP_REQUEST', signUp)]);","map":{"version":3,"sources":["/home/gabriel/my-shelf/src/store/modules/auth/sagas.js"],"names":["takeLatest","call","put","all","toast","history","signInSuccess","signFailure","api","signIn","payload","email","password","response","post","token","user","data","defaults","headers","Authorization","push","err","error","signUp","name","setToken","auth"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,WAA3C;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACnC,MAAI;AACF,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBF,OAA5B;AAEA,UAAMG,QAAQ,GAAG,MAAMZ,IAAI,CAACO,GAAG,CAACM,IAAL,EAAW,UAAX,EAAuB;AAChDH,MAAAA,KADgD;AAEhDC,MAAAA;AAFgD,KAAvB,CAA3B;AAKA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBH,QAAQ,CAACI,IAAjC;AAEAT,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;AAEA,UAAMb,GAAG,CAACI,aAAa,CAACS,KAAD,EAAQC,IAAR,CAAd,CAAT;AAEAX,IAAAA,OAAO,CAACgB,IAAR,CAAa,OAAb;AACD,GAfD,CAeE,OAAOC,GAAP,EAAY;AACZlB,IAAAA,KAAK,CAACmB,KAAN,CAAY,wBAAZ;AACA,UAAMrB,GAAG,CAACK,WAAW,EAAZ,CAAT;AACD;AACF;AAED,OAAO,UAAUiB,MAAV,CAAiB;AAAEd,EAAAA;AAAF,CAAjB,EAA8B;AACnC,MAAI;AACF,UAAM;AAAEe,MAAAA,IAAF;AAAQd,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA4BF,OAAlC;AAEA,UAAMT,IAAI,CAACO,GAAG,CAACM,IAAL,EAAW,OAAX,EAAoB;AAC5BW,MAAAA,IAD4B;AAE5Bd,MAAAA,KAF4B;AAG5BC,MAAAA;AAH4B,KAApB,CAAV;AAMAP,IAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACD,GAVD,CAUE,OAAOC,GAAP,EAAY;AACZlB,IAAAA,KAAK,CAACmB,KAAN,CAAY,2CAAZ;AAEA,UAAMrB,GAAG,CAACK,WAAW,EAAZ,CAAT;AACD;AACF;AAGD,OAAO,SAASmB,QAAT,CAAkB;AAAEhB,EAAAA;AAAF,CAAlB,EAA8B;AACjC,MAAI,CAACA,OAAL,EAAc;AAEd,QAAM;AAAEK,IAAAA;AAAF,MAAYL,OAAO,CAACiB,IAA1B;;AAEA,MAAGZ,KAAH,EAAU;AACRP,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;AACD;AACJ;AAED,eAAeZ,GAAG,CAAC,CACjBH,UAAU,CAAC,mBAAD,EAAsB0B,QAAtB,CADO,EAEjB1B,UAAU,CAAC,uBAAD,EAA0BS,MAA1B,CAFO,EAGjBT,UAAU,CAAC,uBAAD,EAA0BwB,MAA1B,CAHO,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport history from '../../../services/history';\n\nimport { signInSuccess, signFailure } from './actions';\n\nimport api from '../../../services/api';\n\nexport function* signIn({ payload }) {\n  try {\n    const { email, password } = payload;\n\n    const response = yield call(api.post, 'sessions', {\n      email,\n      password\n    });\n\n    const { token, user } = response.data;\n\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n\n    yield put(signInSuccess(token, user));\n\n    history.push('/main');\n  } catch (err) {\n    toast.error('Failed to Authenticate');\n    yield put(signFailure());\n  }\n}\n\nexport function* signUp({ payload }) {\n  try {\n    const { name, email, password } = payload;\n\n    yield call(api.post, 'users', {\n      name,\n      email,\n      password,\n    });\n\n    history.push('/');\n  } catch (err) {\n    toast.error('Failed to sign up, please check your data');\n\n    yield put(signFailure());\n  }\n}\n\n\nexport function setToken({ payload }){\n    if (!payload) return;\n\n    const { token } = payload.auth;\n\n    if(token) {\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n}\n\nexport default all([\n  takeLatest('persist/REHYDRATE', setToken),\n  takeLatest('@auth/SIGN_IN_REQUEST', signIn),\n  takeLatest('@auth/SIGN_UP_REQUEST', signUp),\n]);\n\n"]},"metadata":{},"sourceType":"module"}